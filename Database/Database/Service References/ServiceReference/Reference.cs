//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Database.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IBankService")]
    public interface IBankService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/AddRegisto", ReplyAction="http://tempuri.org/IBankService/AddRegistoResponse")]
        bool AddRegisto(string nome, string username, string password, string morada, string telemovel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/AddRegisto", ReplyAction="http://tempuri.org/IBankService/AddRegistoResponse")]
        System.Threading.Tasks.Task<bool> AddRegistoAsync(string nome, string username, string password, string morada, string telemovel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CheckLogin", ReplyAction="http://tempuri.org/IBankService/CheckLoginResponse")]
        BankService.Model.Utilizador CheckLogin(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CheckLogin", ReplyAction="http://tempuri.org/IBankService/CheckLoginResponse")]
        System.Threading.Tasks.Task<BankService.Model.Utilizador> CheckLoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/EditarUtilizador", ReplyAction="http://tempuri.org/IBankService/EditarUtilizadorResponse")]
        BankService.Model.Utilizador EditarUtilizador(string username, string password, string nome, string morada, string telemovel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/EditarUtilizador", ReplyAction="http://tempuri.org/IBankService/EditarUtilizadorResponse")]
        System.Threading.Tasks.Task<BankService.Model.Utilizador> EditarUtilizadorAsync(string username, string password, string nome, string morada, string telemovel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxReceber", ReplyAction="http://tempuri.org/IBankService/CountMailBoxReceberResponse")]
        int CountMailBoxReceber(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxReceber", ReplyAction="http://tempuri.org/IBankService/CountMailBoxReceberResponse")]
        System.Threading.Tasks.Task<int> CountMailBoxReceberAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxLidas", ReplyAction="http://tempuri.org/IBankService/CountMailBoxLidasResponse")]
        int CountMailBoxLidas(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxLidas", ReplyAction="http://tempuri.org/IBankService/CountMailBoxLidasResponse")]
        System.Threading.Tasks.Task<int> CountMailBoxLidasAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxEnviadas", ReplyAction="http://tempuri.org/IBankService/CountMailBoxEnviadasResponse")]
        int CountMailBoxEnviadas(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxEnviadas", ReplyAction="http://tempuri.org/IBankService/CountMailBoxEnviadasResponse")]
        System.Threading.Tasks.Task<int> CountMailBoxEnviadasAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxRascunhos", ReplyAction="http://tempuri.org/IBankService/CountMailBoxRascunhosResponse")]
        int CountMailBoxRascunhos(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxRascunhos", ReplyAction="http://tempuri.org/IBankService/CountMailBoxRascunhosResponse")]
        System.Threading.Tasks.Task<int> CountMailBoxRascunhosAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxEliminados", ReplyAction="http://tempuri.org/IBankService/CountMailBoxEliminadosResponse")]
        int CountMailBoxEliminados(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/CountMailBoxEliminados", ReplyAction="http://tempuri.org/IBankService/CountMailBoxEliminadosResponse")]
        System.Threading.Tasks.Task<int> CountMailBoxEliminadosAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/AddMail", ReplyAction="http://tempuri.org/IBankService/AddMailResponse")]
        void AddMail(string titulo, string corpo, string destino, string emailOrigem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/AddMail", ReplyAction="http://tempuri.org/IBankService/AddMailResponse")]
        System.Threading.Tasks.Task AddMailAsync(string titulo, string corpo, string destino, string emailOrigem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/DelMail", ReplyAction="http://tempuri.org/IBankService/DelMailResponse")]
        bool DelMail(int mailId, string emailOrigem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/DelMail", ReplyAction="http://tempuri.org/IBankService/DelMailResponse")]
        System.Threading.Tasks.Task<bool> DelMailAsync(int mailId, string emailOrigem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/VerMail", ReplyAction="http://tempuri.org/IBankService/VerMailResponse")]
        BankService.Model.Mensagem VerMail(int mailId, string emailOrigem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/VerMail", ReplyAction="http://tempuri.org/IBankService/VerMailResponse")]
        System.Threading.Tasks.Task<BankService.Model.Mensagem> VerMailAsync(int mailId, string emailOrigem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SaveMail", ReplyAction="http://tempuri.org/IBankService/SaveMailResponse")]
        void SaveMail(string titulo, string corpo, string destino, string emailOrigem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SaveMail", ReplyAction="http://tempuri.org/IBankService/SaveMailResponse")]
        System.Threading.Tasks.Task SaveMailAsync(string titulo, string corpo, string destino, string emailOrigem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/DelContato", ReplyAction="http://tempuri.org/IBankService/DelContatoResponse")]
        bool DelContato(string UsernameOrigem, string UsernameDestino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/DelContato", ReplyAction="http://tempuri.org/IBankService/DelContatoResponse")]
        System.Threading.Tasks.Task<bool> DelContatoAsync(string UsernameOrigem, string UsernameDestino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/AddContato", ReplyAction="http://tempuri.org/IBankService/AddContatoResponse")]
        bool AddContato(string usernameOrigem, string usernameDestino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/AddContato", ReplyAction="http://tempuri.org/IBankService/AddContatoResponse")]
        System.Threading.Tasks.Task<bool> AddContatoAsync(string usernameOrigem, string usernameDestino);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/GetUtilizadores", ReplyAction="http://tempuri.org/IBankService/GetUtilizadoresResponse")]
        BankService.Model.Utilizador[] GetUtilizadores(string loggedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/GetUtilizadores", ReplyAction="http://tempuri.org/IBankService/GetUtilizadoresResponse")]
        System.Threading.Tasks.Task<BankService.Model.Utilizador[]> GetUtilizadoresAsync(string loggedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMeusContatos", ReplyAction="http://tempuri.org/IBankService/SearchMeusContatosResponse")]
        BankService.Model.Utilizador[] SearchMeusContatos(string pesquisa, string loggedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMeusContatos", ReplyAction="http://tempuri.org/IBankService/SearchMeusContatosResponse")]
        System.Threading.Tasks.Task<BankService.Model.Utilizador[]> SearchMeusContatosAsync(string pesquisa, string loggedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensNaoLidas", ReplyAction="http://tempuri.org/IBankService/SearchMensagensNaoLidasResponse")]
        BankService.Model.Mensagem[] SearchMensagensNaoLidas(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensNaoLidas", ReplyAction="http://tempuri.org/IBankService/SearchMensagensNaoLidasResponse")]
        System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensNaoLidasAsync(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensLidas", ReplyAction="http://tempuri.org/IBankService/SearchMensagensLidasResponse")]
        BankService.Model.Mensagem[] SearchMensagensLidas(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensLidas", ReplyAction="http://tempuri.org/IBankService/SearchMensagensLidasResponse")]
        System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensLidasAsync(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensEnviadas", ReplyAction="http://tempuri.org/IBankService/SearchMensagensEnviadasResponse")]
        BankService.Model.Mensagem[] SearchMensagensEnviadas(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensEnviadas", ReplyAction="http://tempuri.org/IBankService/SearchMensagensEnviadasResponse")]
        System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensEnviadasAsync(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensRascunhos", ReplyAction="http://tempuri.org/IBankService/SearchMensagensRascunhosResponse")]
        BankService.Model.Mensagem[] SearchMensagensRascunhos(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensRascunhos", ReplyAction="http://tempuri.org/IBankService/SearchMensagensRascunhosResponse")]
        System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensRascunhosAsync(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensEliminados", ReplyAction="http://tempuri.org/IBankService/SearchMensagensEliminadosResponse")]
        BankService.Model.Mensagem[] SearchMensagensEliminados(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/SearchMensagensEliminados", ReplyAction="http://tempuri.org/IBankService/SearchMensagensEliminadosResponse")]
        System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensEliminadosAsync(string pesquisa, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/DelUtilizador", ReplyAction="http://tempuri.org/IBankService/DelUtilizadorResponse")]
        bool DelUtilizador(string loggedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/DelUtilizador", ReplyAction="http://tempuri.org/IBankService/DelUtilizadorResponse")]
        System.Threading.Tasks.Task<bool> DelUtilizadorAsync(string loggedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/GetEmailContactos", ReplyAction="http://tempuri.org/IBankService/GetEmailContactosResponse")]
        string[] GetEmailContactos(string loggedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBankService/GetEmailContactos", ReplyAction="http://tempuri.org/IBankService/GetEmailContactosResponse")]
        System.Threading.Tasks.Task<string[]> GetEmailContactosAsync(string loggedUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankServiceChannel : Database.ServiceReference.IBankService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BankServiceClient : System.ServiceModel.ClientBase<Database.ServiceReference.IBankService>, Database.ServiceReference.IBankService {
        
        public BankServiceClient() {
        }
        
        public BankServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BankServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddRegisto(string nome, string username, string password, string morada, string telemovel) {
            return base.Channel.AddRegisto(nome, username, password, morada, telemovel);
        }
        
        public System.Threading.Tasks.Task<bool> AddRegistoAsync(string nome, string username, string password, string morada, string telemovel) {
            return base.Channel.AddRegistoAsync(nome, username, password, morada, telemovel);
        }
        
        public BankService.Model.Utilizador CheckLogin(string username, string password) {
            return base.Channel.CheckLogin(username, password);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Utilizador> CheckLoginAsync(string username, string password) {
            return base.Channel.CheckLoginAsync(username, password);
        }
        
        public BankService.Model.Utilizador EditarUtilizador(string username, string password, string nome, string morada, string telemovel) {
            return base.Channel.EditarUtilizador(username, password, nome, morada, telemovel);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Utilizador> EditarUtilizadorAsync(string username, string password, string nome, string morada, string telemovel) {
            return base.Channel.EditarUtilizadorAsync(username, password, nome, morada, telemovel);
        }
        
        public int CountMailBoxReceber(string email) {
            return base.Channel.CountMailBoxReceber(email);
        }
        
        public System.Threading.Tasks.Task<int> CountMailBoxReceberAsync(string email) {
            return base.Channel.CountMailBoxReceberAsync(email);
        }
        
        public int CountMailBoxLidas(string email) {
            return base.Channel.CountMailBoxLidas(email);
        }
        
        public System.Threading.Tasks.Task<int> CountMailBoxLidasAsync(string email) {
            return base.Channel.CountMailBoxLidasAsync(email);
        }
        
        public int CountMailBoxEnviadas(string email) {
            return base.Channel.CountMailBoxEnviadas(email);
        }
        
        public System.Threading.Tasks.Task<int> CountMailBoxEnviadasAsync(string email) {
            return base.Channel.CountMailBoxEnviadasAsync(email);
        }
        
        public int CountMailBoxRascunhos(string email) {
            return base.Channel.CountMailBoxRascunhos(email);
        }
        
        public System.Threading.Tasks.Task<int> CountMailBoxRascunhosAsync(string email) {
            return base.Channel.CountMailBoxRascunhosAsync(email);
        }
        
        public int CountMailBoxEliminados(string email) {
            return base.Channel.CountMailBoxEliminados(email);
        }
        
        public System.Threading.Tasks.Task<int> CountMailBoxEliminadosAsync(string email) {
            return base.Channel.CountMailBoxEliminadosAsync(email);
        }
        
        public void AddMail(string titulo, string corpo, string destino, string emailOrigem) {
            base.Channel.AddMail(titulo, corpo, destino, emailOrigem);
        }
        
        public System.Threading.Tasks.Task AddMailAsync(string titulo, string corpo, string destino, string emailOrigem) {
            return base.Channel.AddMailAsync(titulo, corpo, destino, emailOrigem);
        }
        
        public bool DelMail(int mailId, string emailOrigem) {
            return base.Channel.DelMail(mailId, emailOrigem);
        }
        
        public System.Threading.Tasks.Task<bool> DelMailAsync(int mailId, string emailOrigem) {
            return base.Channel.DelMailAsync(mailId, emailOrigem);
        }
        
        public BankService.Model.Mensagem VerMail(int mailId, string emailOrigem) {
            return base.Channel.VerMail(mailId, emailOrigem);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Mensagem> VerMailAsync(int mailId, string emailOrigem) {
            return base.Channel.VerMailAsync(mailId, emailOrigem);
        }
        
        public void SaveMail(string titulo, string corpo, string destino, string emailOrigem) {
            base.Channel.SaveMail(titulo, corpo, destino, emailOrigem);
        }
        
        public System.Threading.Tasks.Task SaveMailAsync(string titulo, string corpo, string destino, string emailOrigem) {
            return base.Channel.SaveMailAsync(titulo, corpo, destino, emailOrigem);
        }
        
        public bool DelContato(string UsernameOrigem, string UsernameDestino) {
            return base.Channel.DelContato(UsernameOrigem, UsernameDestino);
        }
        
        public System.Threading.Tasks.Task<bool> DelContatoAsync(string UsernameOrigem, string UsernameDestino) {
            return base.Channel.DelContatoAsync(UsernameOrigem, UsernameDestino);
        }
        
        public bool AddContato(string usernameOrigem, string usernameDestino) {
            return base.Channel.AddContato(usernameOrigem, usernameDestino);
        }
        
        public System.Threading.Tasks.Task<bool> AddContatoAsync(string usernameOrigem, string usernameDestino) {
            return base.Channel.AddContatoAsync(usernameOrigem, usernameDestino);
        }
        
        public BankService.Model.Utilizador[] GetUtilizadores(string loggedUser) {
            return base.Channel.GetUtilizadores(loggedUser);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Utilizador[]> GetUtilizadoresAsync(string loggedUser) {
            return base.Channel.GetUtilizadoresAsync(loggedUser);
        }
        
        public BankService.Model.Utilizador[] SearchMeusContatos(string pesquisa, string loggedUser) {
            return base.Channel.SearchMeusContatos(pesquisa, loggedUser);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Utilizador[]> SearchMeusContatosAsync(string pesquisa, string loggedUser) {
            return base.Channel.SearchMeusContatosAsync(pesquisa, loggedUser);
        }
        
        public BankService.Model.Mensagem[] SearchMensagensNaoLidas(string pesquisa, string email) {
            return base.Channel.SearchMensagensNaoLidas(pesquisa, email);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensNaoLidasAsync(string pesquisa, string email) {
            return base.Channel.SearchMensagensNaoLidasAsync(pesquisa, email);
        }
        
        public BankService.Model.Mensagem[] SearchMensagensLidas(string pesquisa, string email) {
            return base.Channel.SearchMensagensLidas(pesquisa, email);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensLidasAsync(string pesquisa, string email) {
            return base.Channel.SearchMensagensLidasAsync(pesquisa, email);
        }
        
        public BankService.Model.Mensagem[] SearchMensagensEnviadas(string pesquisa, string email) {
            return base.Channel.SearchMensagensEnviadas(pesquisa, email);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensEnviadasAsync(string pesquisa, string email) {
            return base.Channel.SearchMensagensEnviadasAsync(pesquisa, email);
        }
        
        public BankService.Model.Mensagem[] SearchMensagensRascunhos(string pesquisa, string email) {
            return base.Channel.SearchMensagensRascunhos(pesquisa, email);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensRascunhosAsync(string pesquisa, string email) {
            return base.Channel.SearchMensagensRascunhosAsync(pesquisa, email);
        }
        
        public BankService.Model.Mensagem[] SearchMensagensEliminados(string pesquisa, string email) {
            return base.Channel.SearchMensagensEliminados(pesquisa, email);
        }
        
        public System.Threading.Tasks.Task<BankService.Model.Mensagem[]> SearchMensagensEliminadosAsync(string pesquisa, string email) {
            return base.Channel.SearchMensagensEliminadosAsync(pesquisa, email);
        }
        
        public bool DelUtilizador(string loggedUser) {
            return base.Channel.DelUtilizador(loggedUser);
        }
        
        public System.Threading.Tasks.Task<bool> DelUtilizadorAsync(string loggedUser) {
            return base.Channel.DelUtilizadorAsync(loggedUser);
        }
        
        public string[] GetEmailContactos(string loggedUser) {
            return base.Channel.GetEmailContactos(loggedUser);
        }
        
        public System.Threading.Tasks.Task<string[]> GetEmailContactosAsync(string loggedUser) {
            return base.Channel.GetEmailContactosAsync(loggedUser);
        }
    }
}
